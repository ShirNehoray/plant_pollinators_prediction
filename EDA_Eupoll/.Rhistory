# Pacages
library(dplyr)
library(ggplot2)
library(bipartite)   # for network analysis
library(tidyr)
library(readr)
library(ggplot2)
# Read in the Italy-only dataset you exported
italy_data <- read_csv("italy_networks.csv")
n_networks <- italy_data %>%
distinct(Network_id) %>%
nrow()
setwd("/Users/shirnehoray/EDA/EDA_Eupoll")
# Read in the Italy-only dataset you exported
italy_data <- read_csv("italy_networks.csv")
n_networks <- italy_data %>%
distinct(Network_id) %>%
nrow()
View(italy_data)
n_networks # number of networks in Italy
# Get in how many studies explored this country
unique_studies <- italy_data %>%
distinct(Study_id)
print(unique_studies)
networks_per_study <- italy_data %>%
distinct(Study_id, Network_id) %>%
count(Study_id, name = "N_networks")
print(networks_per_study)
study_bioregion <- italy_data %>%
distinct(Study_id, Network_id, Bioregion) %>%
group_by(Study_id, Bioregion) %>%
summarise(N_networks = n_distinct(Network_id), .groups = "drop") %>%
arrange(Study_id, Bioregion)
print(study_bioregion)
ggplot(study_bioregion, aes(x = Study_id, y = N_networks, fill = Bioregion)) +
geom_bar(stat = "identity") +
labs(title = "Number of Networks per Study and Bioregion (Italy)",
x = "Study ID",
y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study_bioregion, aes(x = Study_id, y = N_networks, fill = Bioregion)) +
geom_bar(stat = "identity") +
labs(title = "Number of Networks per Study and Bioregion (Italy)",
x = "Study ID",
y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
# Number of network per region
ggplot(networks_per_bioregion, aes(x = Bioregion, y = n, fill = Bioregion)) +
geom_bar(stat = "identity") +
labs(title = "Number of Networks per Bioregion (Italy)",
x = "Bioregion",
y = "Number of Networks") +
theme(axis.text.x = element_text( hjust = 1),
legend.position = "none")
networks_per_bioregion <- italy_data %>%
distinct(Network_id, Bioregion) %>%   # each network counted once per bioregion
count(Bioregion)
print(networks_per_bioregion)
# Number of network per region
ggplot(networks_per_bioregion, aes(x = Bioregion, y = n, fill = Bioregion)) +
geom_bar(stat = "identity") +
labs(title = "Number of Networks per Bioregion (Italy)",
x = "Bioregion",
y = "Number of Networks") +
theme(axis.text.x = element_text( hjust = 1),
legend.position = "none")
# Get unique Network_id - Biogeographic_region pairs
region_per_net <- interactions %>%
select(Network_id, Bioregion) %>%
distinct()
# Read the data
interactions <- read.csv("Interaction_data.csv")
# Number of unique networks
n_networks <- interactions %>%
distinct(Network_id) %>%
count()
print(n_networks)
# Number of unique networks
n_networks <- interactions %>%
distinct(Network_id) %>%
count()
print(n_networks)
inter_per_net <- interactions %>%
group_by(Network_id) %>%
summarise(Total_Interactions = sum(Interaction))
interactions$Network_id <- as.character(interactions$Network_id)
inter_per_net <- interactions %>%
group_by(Network_id) %>%
summarise(Total_Interactions = sum(Interaction)) %>%
arrange(desc(Total_Interactions))
inter_per_net
# Get unique Network_id - Bioregem pairs
region_per_net <- interactions %>%
select(Network_id, Bioregion) %>%
distinct()
# Join with interaction summary
inter_per_net_with_region <- inter_per_net %>%
left_join(region_per_net, by = "Network_id")
inter_per_net_with_region
# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(bipartite)  # For network analysis
# Read the data
interactions <- read.csv("Interaction_data.csv")
# Number of unique networks
n_networks <- interactions %>%
distinct(Network_id) %>%
count()
print(n_networks)
inter_per_net <- interactions %>%
group_by(Network_id) %>%
summarise(Total_Interactions = sum(Interaction))
interactions$Network_id <- as.character(interactions$Network_id)
inter_per_net <- interactions %>%
group_by(Network_id) %>%
summarise(Total_Interactions = sum(Interaction)) %>%
arrange(desc(Total_Interactions))
# Get unique Network_id - Bioregem pairs
region_per_net <- interactions %>%
select(Network_id, Bioregion) %>%
distinct()
# Join with interaction summary
inter_per_net_with_region <- inter_per_net %>%
left_join(region_per_net, by = "Network_id")
# Count networks per bioregion
networks_per_bioregion <- interactions %>%
select(Network_id, Bioregion) %>%
distinct() %>%
count(Bioregion)
# Plot
ggplot(networks_per_bioregion, aes(x = reorder(Bioregion, -n), y = n)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Networks per Bioregion",
x = "Bioregion", y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot
ggplot(networks_per_bioregion, aes(x = reorder(Bioregion, -n), y = n)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Networks per Bioregion",
x = "Bioregion", y = "Number of Networks") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot
ggplot(networks_per_bioregion, aes(x = reorder(Bioregion, -n), y = n)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Networks per Bioregion",
x = "Bioregion", y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Sum interactions per bioregion
interactions_per_bioregion <- interactions %>%
group_by(Bioregion) %>%
summarise(Total_Interactions = sum(Interaction)) %>%
arrange(desc(Total_Interactions))
# Plot
ggplot(interactions_per_bioregion, aes(x = reorder(Bioregion, -Total_Interactions), y = Total_Interactions)) +
geom_bar(stat = "identity", fill = "tomato") +
labs(title = "Total Interactions per Bioregion",
x = "Bioregion", y = "Number of Interactions") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Top 10 plants
top_plants <- interactions %>%
group_by(Plant_accepted_name) %>%
summarise(Total = sum(Interaction)) %>%
arrange(desc(Total)) %>%
slice(1:10)
# Plot
ggplot(top_plants, aes(x = reorder(Plant_accepted_name, Total), y = Total)) +
geom_bar(stat = "identity", fill = "forestgreen") +
labs(title = "Top 10 Most Frequently Interacting Plants",
x = "Plant", y = "Total Interactions") +
coord_flip() +
theme_minimal()
# Top 10 pollinators
top_pollinators <- interactions %>%
group_by(Pollinator_accepted_name) %>%
summarise(Total = sum(Interaction)) %>%
arrange(desc(Total)) %>%
slice(1:10)
# Plot
ggplot(top_pollinators, aes(x = reorder(Pollinator_accepted_name, Total), y = Total)) +
geom_bar(stat = "identity", fill = "goldenrod") +
labs(title = "Top 10 Most Frequently Interacting Pollinators",
x = "Pollinator", y = "Total Interactions") +
coord_flip() +
theme_minimal()
# Count networks per country
networks_per_country <- interactions %>%
select(Network_id, Country) %>%
distinct() %>%
count(Country)
# Plot
ggplot(networks_per_country, aes(x = reorder(Country, -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Number of Networks per Country",
x = "Country", y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Get unique network-country-bioregion combinations
country_bioregion <- interactions %>%
select(Network_id, Country, Bioregion) %>%
distinct()
# Count networks per country and attach bioregion
networks_per_country <- country_bioregion %>%
distinct(Network_id, Country, Bioregion) %>%
count(Country, Bioregion)
# Plot
ggplot(networks_per_country, aes(x = reorder(Country, -n), y = n, fill = Bioregion)) +
geom_bar(stat = "identity") +
labs(title = "Number of Networks per Country (Colored by Bioregion)",
x = "Country", y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2")  # or use "Dark2", "Paired", etc.
#species distribution ----
# Get unique network-country-bioregion combinations
country_bioregion <- interactions %>%
select(Network_id, Country, Bioregion) %>%
distinct()
# Count networks per country and attach bioregion
networks_per_country <- country_bioregion %>%
distinct(Network_id, Country, Bioregion) %>%
count(Country, Bioregion)
# Plot
ggplot(networks_per_country, aes(x = reorder(Country, -n), y = n, fill = Bioregion)) +
geom_bar(stat = "identity") +
labs(title = "Number of Networks per Country (Colored by Bioregion)",
x = "Country", y = "Number of Networks") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2")  # or use "Dark2", "Paired", etc.
country_bioregion
# Species distribution
# Number of networks each plant appears in
plant_distribution <- interactions %>%
select(Network_id, Plant_accepted_name) %>%
distinct() %>%
count(Plant_accepted_name) %>%
arrange(desc(n))
# Plot top 20
ggplot(plant_distribution %>% slice(1:20),
aes(x = reorder(Plant_accepted_name, n), y = n)) +
geom_bar(stat = "identity", fill = "seagreen") +
labs(title = "Top 20 Plant Species by Number of Networks",
x = "Plant Species", y = "Number of Networks") +
coord_flip() +
theme_minimal()
# Plot top 20
ggplot(plant_distribution %>% slice(1:40),
aes(x = reorder(Plant_accepted_name, n), y = n)) +
geom_bar(stat = "identity", fill = "seagreen") +
labs(title = "Top 20 Plant Species by Number of Networks",
x = "Plant Species", y = "Number of Networks") +
coord_flip() +
theme_minimal()
# Plot top 20
ggplot(plant_distribution %>% slice(1:90),
aes(x = reorder(Plant_accepted_name, n), y = n)) +
geom_bar(stat = "identity", fill = "seagreen") +
labs(title = "Top 20 Plant Species by Number of Networks",
x = "Plant Species", y = "Number of Networks") +
coord_flip() +
theme_minimal()
# Plot top 20
ggplot(plant_distribution %>% slice(1:40),
aes(x = reorder(Plant_accepted_name, n), y = n)) +
geom_bar(stat = "identity", fill = "seagreen") +
labs(title = "Top 20 Plant Species by Number of Networks",
x = "Plant Species", y = "Number of Networks") +
coord_flip() +
theme_minimal()
# Number of networks each plant appears in
plant_distribution <- interactions %>%
select(Network_id, Plant_accepted_name) %>%
distinct() %>%
count(Plant_accepted_name)
# Histogram
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "seagreen", color = "white") +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
Plot with black theme and green bars
#Plot with black theme and green bars
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "#90EE90", color = NA) +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal(base_family = "Arial") +
theme(
plot.background = element_rect(fill = "black", color = NA),
panel.background = element_rect(fill = "black", color = NA),
panel.grid.major = element_line(color = "white"),
panel.grid.minor = element_line(color = "white"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", face = "bold")
)
#Plot with black theme and green bars
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "#90EE90", color = NA) +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal(base_family = "Arial") +
theme(
panel.grid.major = element_line(color = "white"),
panel.grid.minor = element_line(color = "white"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", face = "bold")
)
#Plot with black theme and green bars
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "#90EE90", color = NA) +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal(base_family = "Arial")
# Histogram
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "seagreen", color = "white") +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
# Species distribution
# Number of networks each plant appears in
plant_distribution <- interactions %>%
select(Network_id, Plant_accepted_name) %>%
distinct() %>%
count(Plant_accepted_name) %>%
arrange(desc(n))
# Histogram
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "seagreen", color = "white") +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
# Histogram
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "seagreen") +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
# Number of networks each pollinator appears in
pollinator_distribution <- interactions %>%
select(Network_id, Pollinator_accepted_name) %>%
distinct() %>%
count(Pollinator_accepted_name) %>%
arrange(desc(n))
# Plot top 20
ggplot(pollinator_distribution %>% slice(1:20),
aes(x = reorder(Pollinator_accepted_name, n), y = n)) +
geom_bar(stat = "identity", fill = "darkorange") +
labs(title = "Top 20 Pollinator Species by Number of Networks",
x = "Pollinator Species", y = "Number of Networks") +
coord_flip() +
theme_minimal()
# Plot top 40
ggplot(pollinator_distribution %>% slice(1:40),
aes(x = reorder(Pollinator_accepted_name, n), y = n)) +
geom_bar(stat = "identity", fill = "darkorange") +
labs(title = "Top 20 Pollinator Species by Number of Networks",
x = "Pollinator Species", y = "Number of Networks") +
coord_flip() +
theme_minimal()
# Histogram
ggplot(pollinator_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "darkorange") +
labs(title = "Distribution of Plant Species Across Networks",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "green4", color = "white") +
labs(title = "Histogram: Number of Networks per Plant Species",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
ggplot(plant_distribution, aes(x = n)) +
geom_histogram(binwidth = 1, fill = "green4") +
labs(title = "Histogram: Number of Networks per Plant Species",
x = "Number of Networks", y = "Number of Plant Species") +
theme_minimal()
#------
install.packages("vegan")
install.packages("vegan")
install.packages("iNEXT")  # Optional, for extrapolation like panel c
library(dplyr)
library(vegan)
library(ggplot2)
# Create interaction matrix: rows = networks, columns = species
mat_pollinators <- interactions %>%
select(Network_id, Pollinator_accepted_name) %>%
distinct() %>%
mutate(present = 1) %>%
pivot_wider(names_from = Pollinator_accepted_name, values_from = present, values_fill = 0) %>%
column_to_rownames("Network_id") %>%
as.matrix()
library(vegan)
library(ggplot2)
# Create interaction matrix: rows = networks, columns = species
mat_pollinators <- interactions %>%
select(Network_id, Pollinator_accepted_name) %>%
distinct() %>%
mutate(present = 1) %>%
pivot_wider(names_from = Pollinator_accepted_name, values_from = present, values_fill = 0) %>%
column_to_rownames("Network_id") %>%
as.matrix()
library(dplyr)
# Create interaction matrix: rows = networks, columns = species
mat_pollinators <- interactions %>%
select(Network_id, Pollinator_accepted_name) %>%
distinct() %>%
mutate(present = 1) %>%
pivot_wider(names_from = Pollinator_accepted_name, values_from = present, values_fill = 0) %>%
column_to_rownames("Network_id") %>%
as.matrix()
library(tibble)
# Create interaction matrix: rows = networks, columns = species
mat_pollinators <- interactions %>%
select(Network_id, Pollinator_accepted_name) %>%
distinct() %>%
mutate(present = 1) %>%
pivot_wider(names_from = Pollinator_accepted_name, values_from = present, values_fill = 0) %>%
column_to_rownames("Network_id") %>%
as.matrix()
library(vegan)
#------
install.packages("vegan")
install.packages("vegan")
detach("package:vegan", unload = TRUE)
remove.packages("vegan")
install.packages("vegan")
install.packages("vegan", lib = tempfile())
